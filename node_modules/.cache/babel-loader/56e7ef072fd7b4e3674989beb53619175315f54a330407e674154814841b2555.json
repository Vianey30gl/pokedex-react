{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Latitude 5490\\\\Desktop\\\\Proyect-Poke\\\\pokedex-react\\\\src\\\\Context\\\\PokemonProvide.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { PokemonContext } from \"./PokemonContext\";\nimport { useFrom } from \"../pages/useFrom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PokemonProvide = ({\n  children\n}) => {\n  _s();\n  // const [allPokemons, setAllPokemons] = useState([]);\n  // const [globalPokemons, setglobalPokemons] = useState([]);\n  const [offset, setOffset] = useState(0);\n\n  //---------UseFrom pa' psasr los muñequitos a la app---------//\n  const {\n    valueSearch,\n    onInputChange,\n    onResetFrom\n  } = useFrom({\n    valueSearch: ''\n  });\n\n  //----Estados----//\n  const [loading, setLoading] = useState(true);\n  const [active, setactive] = useState(false);\n\n  //--------- 20 pokemones Api ----------//\n  const getAllPokemons = async (limit = 20) => {\n    const baseURL = 'https://pokeapi.co/api/v2/';\n    const res = await fetch(`${baseURL}pokemon?limit=${limit}&offset=${offset}`);\n    const data = await res.json();\n    const promises = data.results.map(async pokemon => {\n      const res = await fetch(pokemon.url);\n      const data = await res.json();\n      return data;\n    });\n    const resultado = await Promise.all(promises);\n    setAllPokemons([...allPokemons, ...resultado]);\n    setLoading(false);\n  };\n\n  //----------Todos los muñequitos----------//\n  const getglobalPokemones = async () => {\n    const baseURL = 'https://pokeapi.co/api/v2/';\n    const res = await fetch(`${baseURL}pokemon?limit=100000&offset=0`);\n    const data = await res.json();\n    const promises = data.results.map(async pokemon => {\n      const res = await fetch(pokemon.url);\n      const data = await res.json();\n      return data;\n    });\n    const resultado = await Promise.all(promises);\n    getglobalPokemones(resultado);\n    setLoading(false);\n  };\n  //------------- Tomar el muñequito y mostar info -------------//\n  const getPokemonByID = async id => {\n    const baseURL = 'https://pokeapi.co/api/v2/';\n    const res = await fetch(`${baseURL}pokemon/${id}`);\n    const data = await res.json();\n    return data;\n  };\n  useEffect(() => {\n    getAllPokemons();\n  }, []);\n  useEffect(() => {\n    getglobalPokemones();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(PokemonContext.Provider, {\n    value: {\n      valueSearch,\n      onInputChange,\n      onResetFrom,\n      getAllPokemons,\n      getglobalPokemones,\n      getPokemonByID\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 11\n  }, this);\n};\n_s(PokemonProvide, \"NHjF6pEkzzcWhsePFvSjnbXPgDI=\", false, function () {\n  return [useFrom];\n});\n_c = PokemonProvide;\nvar _c;\n$RefreshReg$(_c, \"PokemonProvide\");","map":{"version":3,"names":["useEffect","useState","PokemonContext","useFrom","jsxDEV","_jsxDEV","PokemonProvide","children","_s","offset","setOffset","valueSearch","onInputChange","onResetFrom","loading","setLoading","active","setactive","getAllPokemons","limit","baseURL","res","fetch","data","json","promises","results","map","pokemon","url","resultado","Promise","all","setAllPokemons","allPokemons","getglobalPokemones","getPokemonByID","id","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Latitude 5490/Desktop/Proyect-Poke/pokedex-react/src/Context/PokemonProvide.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { PokemonContext } from \"./PokemonContext\";\r\nimport { useFrom } from \"../pages/useFrom\";\r\n\r\nexport const PokemonProvide = ({ children }) => {\r\n\r\n  // const [allPokemons, setAllPokemons] = useState([]);\r\n\t// const [globalPokemons, setglobalPokemons] = useState([]);\r\n\tconst [offset, setOffset] = useState(0);\r\n\r\n  //---------UseFrom pa' psasr los muñequitos a la app---------//\r\n        const {valueSearch,onInputChange,onResetFrom} = useFrom({\r\n          valueSearch: ''\r\n\r\n        })\r\n\r\n  //----Estados----//\r\n  const [loading, setLoading] = useState(true)\r\n  const [active, setactive] = useState(false)\r\n\r\n//--------- 20 pokemones Api ----------//\r\n      const getAllPokemons = async (limit = 20) =>{\r\n         const baseURL = 'https://pokeapi.co/api/v2/'\r\n\r\n         const res = await fetch (`${baseURL}pokemon?limit=${limit}&offset=${offset}`)\r\n         const data = await res.json();\r\n\r\n         const promises = data.results.map(async(pokemon) =>{\r\n            const res = await fetch(pokemon.url)\r\n            const data = await res.json()\r\n            return data\r\n         })\r\n        const resultado = await Promise.all(promises)\r\n\r\n\r\n        setAllPokemons([...allPokemons, ...resultado]);\r\n        setLoading(false);\r\n         \r\n        }\r\n       \r\n        //----------Todos los muñequitos----------//\r\n          const getglobalPokemones = async() =>{\r\n            const baseURL = 'https://pokeapi.co/api/v2/'\r\n\r\n         const res = await fetch (`${baseURL}pokemon?limit=100000&offset=0`)\r\n         const data = await res.json();\r\n\r\n         const promises = data.results.map(async(pokemon) =>{\r\n            const res = await fetch(pokemon.url)\r\n            const data = await res.json()\r\n            return data\r\n         })\r\n        const resultado = await Promise.all(promises)\r\n            getglobalPokemones(resultado)\r\n            setLoading(false)\r\n         \r\n          }\r\n      //------------- Tomar el muñequito y mostar info -------------//\r\n          const getPokemonByID = async(id) =>{\r\n            const baseURL = 'https://pokeapi.co/api/v2/'\r\n\r\n            const res = await fetch(`${baseURL}pokemon/${id}`)\r\n            const data = await res.json()\r\n            return data\r\n          }\r\n\r\n\r\n\r\n\r\n     useEffect(() => {\r\n        getAllPokemons()\r\n     }, [])\r\n\r\n     useEffect(() => {\r\n      getglobalPokemones()\r\n     },[])\r\n\r\n\r\n  return (\r\n          <PokemonContext.Provider value={{\r\n                 valueSearch,\r\n                 onInputChange,\r\n                 onResetFrom,\r\n                 getAllPokemons,\r\n                 getglobalPokemones,\r\n                 getPokemonByID\r\n          }}>\r\n            {children}\r\n          </PokemonContext.Provider>\r\n  );\r\n  \r\n};\r\n\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,OAAO,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,OAAO,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAE9C;EACD;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;;EAEtC;EACM,MAAM;IAACU,WAAW;IAACC,aAAa;IAACC;EAAW,CAAC,GAAGV,OAAO,CAAC;IACtDQ,WAAW,EAAE;EAEf,CAAC,CAAC;;EAER;EACA,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACe,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;;EAE7C;EACM,MAAMiB,cAAc,GAAG,MAAAA,CAAOC,KAAK,GAAG,EAAE,KAAI;IACzC,MAAMC,OAAO,GAAG,4BAA4B;IAE5C,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAG,GAAEF,OAAQ,iBAAgBD,KAAM,WAAUV,MAAO,EAAC,CAAC;IAC7E,MAAMc,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;IAE7B,MAAMC,QAAQ,GAAGF,IAAI,CAACG,OAAO,CAACC,GAAG,CAAC,MAAMC,OAAO,IAAI;MAChD,MAAMP,GAAG,GAAG,MAAMC,KAAK,CAACM,OAAO,CAACC,GAAG,CAAC;MACpC,MAAMN,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;MAC7B,OAAOD,IAAI;IACd,CAAC,CAAC;IACH,MAAMO,SAAS,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACP,QAAQ,CAAC;IAG7CQ,cAAc,CAAC,CAAC,GAAGC,WAAW,EAAE,GAAGJ,SAAS,CAAC,CAAC;IAC9Cf,UAAU,CAAC,KAAK,CAAC;EAEjB,CAAC;;EAED;EACE,MAAMoB,kBAAkB,GAAG,MAAAA,CAAA,KAAU;IACnC,MAAMf,OAAO,GAAG,4BAA4B;IAE/C,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAG,GAAEF,OAAQ,+BAA8B,CAAC;IACnE,MAAMG,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;IAE7B,MAAMC,QAAQ,GAAGF,IAAI,CAACG,OAAO,CAACC,GAAG,CAAC,MAAMC,OAAO,IAAI;MAChD,MAAMP,GAAG,GAAG,MAAMC,KAAK,CAACM,OAAO,CAACC,GAAG,CAAC;MACpC,MAAMN,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;MAC7B,OAAOD,IAAI;IACd,CAAC,CAAC;IACH,MAAMO,SAAS,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACP,QAAQ,CAAC;IACzCU,kBAAkB,CAACL,SAAS,CAAC;IAC7Bf,UAAU,CAAC,KAAK,CAAC;EAEnB,CAAC;EACL;EACI,MAAMqB,cAAc,GAAG,MAAMC,EAAE,IAAI;IACjC,MAAMjB,OAAO,GAAG,4BAA4B;IAE5C,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEF,OAAQ,WAAUiB,EAAG,EAAC,CAAC;IAClD,MAAMd,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;IAC7B,OAAOD,IAAI;EACb,CAAC;EAKNvB,SAAS,CAAC,MAAM;IACbkB,cAAc,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAENlB,SAAS,CAAC,MAAM;IACfmC,kBAAkB,CAAC,CAAC;EACrB,CAAC,EAAC,EAAE,CAAC;EAGR,oBACQ9B,OAAA,CAACH,cAAc,CAACoC,QAAQ;IAACC,KAAK,EAAE;MACzB5B,WAAW;MACXC,aAAa;MACbC,WAAW;MACXK,cAAc;MACdiB,kBAAkB;MAClBC;IACP,CAAE;IAAA7B,QAAA,EACCA;EAAQ;IAAAiC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAGpC,CAAC;AAACnC,EAAA,CAvFWF,cAAc;EAAA,QAO6BH,OAAO;AAAA;AAAAyC,EAAA,GAPlDtC,cAAc;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}