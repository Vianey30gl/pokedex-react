{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Latitude 5490\\\\Desktop\\\\Proyect-Poke\\\\pokedex-react\\\\src\\\\Componentes\\\\PokemonProvide.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { PokemonContext } from \".././Context/PokemonContext\";\nimport { useFrom } from \"../pages/useFrom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PokemonProvide = ({\n  children\n}) => {\n  _s();\n  const [globalPokemons, setGlobalPokemons] = useState([]);\n  const [allPokemons, setAllPokemons] = useState([]);\n  const [offset, setOffset] = useState(0);\n\n  //---------------------Utilizar el useFrom--------------------//\n\n  const {\n    valueSearch,\n    onInputChange,\n    onResetFrom\n  } = useFrom({\n    valueSearch: ''\n  });\n\n  //.......................Estados de carga..........................//\n\n  const [loading, setLoading] = useState(true);\n  const [active, setActive] = useState(false);\n\n  //------ Llamar los 20 bichitos------//\n\n  const getAllPokemons = async (limit = 20, offset = 0) => {\n    try {\n      let url = `https://pokeapi.co/api/v2/pokemon?limit=${limit}&offset=${offset}`;\n      const response = await fetch(url);\n      const data = await response.json();\n      return data;\n    } catch (err) {}\n  };\n\n  //---------------Llamar todos los bichitos-----------------//\n\n  const getGlobalPokemons = async () => {\n    const baseURL = \"https://pokeapi.co/api/v2/\";\n    const res = await fetch(`${baseURL}pokemon?limit=20&offset=0`);\n    const data = await res.json();\n    const promises = data.results.map(async pokemon => {\n      const res = await fetch(pokemon.url);\n      const data = await res.json();\n      return data;\n    });\n    const results = await Promise.all(promises);\n    setGlobalPokemons(results);\n    setLoading(false);\n  };\n\n  //----------------Llamar por ID los pokemons---------------------//\n\n  const getPokemonById = async id => {\n    const baseURL = \"https://pokeapi.co/api/v2/\";\n    const res = await fetch(`${baseURL}pokemon/${id}`);\n    const data = await res.json();\n    return data;\n  };\n  useEffect(() => {\n    getAllPokemons();\n  }, []);\n  useEffect(() => {\n    getGlobalPokemons();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(PokemonContext.Provider, {\n    value: {\n      valueSearch,\n      onInputChange,\n      onResetFrom,\n      allPokemons,\n      globalPokemons,\n      getPokemonById\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 4\n  }, this);\n};\n_s(PokemonProvide, \"0xndRN61U1I8hI6whTIDo2PiBf0=\", false, function () {\n  return [useFrom];\n});\n_c = PokemonProvide;\nvar _c;\n$RefreshReg$(_c, \"PokemonProvide\");","map":{"version":3,"names":["useEffect","useState","PokemonContext","useFrom","jsxDEV","_jsxDEV","PokemonProvide","children","_s","globalPokemons","setGlobalPokemons","allPokemons","setAllPokemons","offset","setOffset","valueSearch","onInputChange","onResetFrom","loading","setLoading","active","setActive","getAllPokemons","limit","url","response","fetch","data","json","err","getGlobalPokemons","baseURL","res","promises","results","map","pokemon","Promise","all","getPokemonById","id","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Latitude 5490/Desktop/Proyect-Poke/pokedex-react/src/Componentes/PokemonProvide.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { PokemonContext } from \".././Context/PokemonContext\";\r\nimport { useFrom } from \"../pages/useFrom\";\r\n\r\n\r\nexport const PokemonProvide = ({children}) => {\r\n\r\n   const [globalPokemons, setGlobalPokemons] = useState([])\r\n   const [allPokemons, setAllPokemons] = useState([])\r\n    const[offset, setOffset] = useState(0);\r\n\r\n  //---------------------Utilizar el useFrom--------------------//\r\n        \r\n       const {valueSearch, onInputChange,onResetFrom} = useFrom({\r\n        valueSearch:''\r\n       })\r\n\r\n  //.......................Estados de carga..........................//\r\n\r\n       const [loading, setLoading] = useState(true)\r\n       const [active, setActive] = useState(false)\r\n\r\n //------ Llamar los 20 bichitos------//\r\n \r\nconst getAllPokemons = async (limit = 20, offset = 0) => {\r\n  try {\r\n    let url = `https://pokeapi.co/api/v2/pokemon?limit=${limit}&offset=${offset}`;\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (err) {}\r\n};\r\n\r\n //---------------Llamar todos los bichitos-----------------//\r\n\r\n          const getGlobalPokemons = async() =>{\r\n            const baseURL = \"https://pokeapi.co/api/v2/\"\r\n             const res = await fetch (\r\n              `${baseURL}pokemon?limit=20&offset=0`\r\n              );\r\n               const  data = await res.json();\r\n                const promises = data.results.map(async(pokemon) =>{\r\n                  const res = await fetch(pokemon.url)\r\n                  const data = await res.json()\r\n                  return data\r\n                })\r\n  \r\n                const results = await Promise.all(promises)\r\n                   setGlobalPokemons(results) \r\n                   setLoading(false)\r\n          }\r\n\r\n//----------------Llamar por ID los pokemons---------------------//\r\n\r\n           const getPokemonById = async (id) => {\r\n            const baseURL = \"https://pokeapi.co/api/v2/\"\r\n             const res = await fetch(`${baseURL}pokemon/${id}`)\r\n              const data = await res.json()\r\n                 return data \r\n           }\r\n\r\n\r\n        useEffect(()=>{\r\n          getAllPokemons()\r\n        }, [])\r\n\r\n        useEffect(() =>{\r\n          getGlobalPokemons()\r\n        },[])\r\n\r\n   return(\r\n   <PokemonContext.Provider value={{\r\n            valueSearch,\r\n            onInputChange,\r\n            onResetFrom,\r\n            allPokemons,\r\n            globalPokemons,\r\n            getPokemonById\r\n    }}>\r\n    {children}\r\n   </PokemonContext.Provider>\r\n   );\r\n};\r\n      "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}