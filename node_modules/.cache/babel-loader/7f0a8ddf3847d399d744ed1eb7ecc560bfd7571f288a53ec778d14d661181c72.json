{"ast":null,"code":"import { useEffect, useState } from \"react\";\nimport { PokemonContext } from \"./PokemonContext\";\nimport { useFrom } from \"../pages/useFrom\";\n\n// export const PokemonProvide = ({children}) => {\n\n//    const [globalPokemons, setGlobalPokemons] = useState([])\n//    const [allPokemons, setAllPokemons] = useState([])\n//     const[offset, setOffset] = useState(0);\n\n//   //---------------------Utilizar el useFrom--------------------//\n\n//        const {valueSearch, onInputChange,onResetFrom} = useFrom({\n//         valueSearch:''\n//        })\n\n//   //.......................Estados de carga..........................//\n\n//        const [loading, setLoading] = useState(true)\n//        const [active, setActive] = useState(false)\n\n//  //------ Llamar los 20 bichitos------//\n\n//         const getAllPokemons = async(limit =20 ) =>{\n//           const baseURL = \"https://pokeapi.co/api/v2/\"\n//           const res = await fetch (\n//             `${baseURL}pokemon?limit=${limit}&offset=${offset}`\n//             );\n\n//             const  data = await res.json();\n//               const promises = data.results.map(async(pokemon) =>{\n//                 const res = await fetch(pokemon.url)\n//                 const data = await res.json()\n//                 return data\n//               })\n\n//               const results = await Promise.all(promises)\n\n//               setAllPokemons([...allPokemons, ...results]); \n//               setLoading(false) \n//      }\n\n//  //---------------Llamar todos los bichitos-----------------//\n\n//           const getGlobalPokemons = async() =>{\n//             const baseURL = \"https://pokeapi.co/api/v2/\"\n//              const res = await fetch (\n//               `${baseURL}pokemon?limit=1000&offset=0`\n//               );\n//                const  data = await res.json();\n//                 const promises = data.results.map(async(pokemon) =>{\n//                   const res = await fetch(pokemon.url)\n//                   const data = await res.json()\n//                   return data\n//                 })\n\n//                 const results = await Promise.all(promises)\n//                    setGlobalPokemons(results) \n//                    setLoading(false)\n//           }\n\n//           //------Llamar por ID los pokemons------//\n\n//            const getPokemonById = async (id) => {\n//             const baseURL = \"https://pokeapi.co/api/v2/\"\n//              const res = await fetch(`${baseURL}pokemon/${id}`)\n//               const data = await res.json()\n//                 return data \n//            }\n\n//         useEffect(()=>{\n//           getAllPokemons()\n//         }, [])\n\n//         useEffect(() =>{\n//           getGlobalPokemons()\n//         },[])\n\n//    return(\n//    <PokemonContext.Provider value={{\n//             valueSearch,\n//             onInputChange,\n//             onResetFrom,\n//             allPokemons,\n//             globalPokemons,\n//             getPokemonById\n//     }}>\n//     {children}\n//    </PokemonContext.Provider>\n//    );\n// };","map":{"version":3,"names":["useEffect","useState","PokemonContext","useFrom"],"sources":["C:/Users/Latitude 5490/Desktop/Proyect-Poke/pokedex-react/src/Context/PokemonProvide.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { PokemonContext } from \"./PokemonContext\";\r\nimport { useFrom } from \"../pages/useFrom\";\r\n\r\n\r\n// export const PokemonProvide = ({children}) => {\r\n\r\n//    const [globalPokemons, setGlobalPokemons] = useState([])\r\n//    const [allPokemons, setAllPokemons] = useState([])\r\n//     const[offset, setOffset] = useState(0);\r\n\r\n//   //---------------------Utilizar el useFrom--------------------//\r\n        \r\n//        const {valueSearch, onInputChange,onResetFrom} = useFrom({\r\n//         valueSearch:''\r\n//        })\r\n\r\n\r\n\r\n\r\n//   //.......................Estados de carga..........................//\r\n\r\n//        const [loading, setLoading] = useState(true)\r\n//        const [active, setActive] = useState(false)\r\n\r\n//  //------ Llamar los 20 bichitos------//\r\n \r\n//         const getAllPokemons = async(limit =20 ) =>{\r\n//           const baseURL = \"https://pokeapi.co/api/v2/\"\r\n//           const res = await fetch (\r\n//             `${baseURL}pokemon?limit=${limit}&offset=${offset}`\r\n//             );\r\n            \r\n          \r\n//             const  data = await res.json();\r\n//               const promises = data.results.map(async(pokemon) =>{\r\n//                 const res = await fetch(pokemon.url)\r\n//                 const data = await res.json()\r\n//                 return data\r\n//               })\r\n\r\n//               const results = await Promise.all(promises)\r\n          \r\n//               setAllPokemons([...allPokemons, ...results]); \r\n//               setLoading(false) \r\n//      }\r\n\r\n//  //---------------Llamar todos los bichitos-----------------//\r\n\r\n//           const getGlobalPokemons = async() =>{\r\n//             const baseURL = \"https://pokeapi.co/api/v2/\"\r\n//              const res = await fetch (\r\n//               `${baseURL}pokemon?limit=1000&offset=0`\r\n//               );\r\n//                const  data = await res.json();\r\n//                 const promises = data.results.map(async(pokemon) =>{\r\n//                   const res = await fetch(pokemon.url)\r\n//                   const data = await res.json()\r\n//                   return data\r\n//                 })\r\n  \r\n//                 const results = await Promise.all(promises)\r\n//                    setGlobalPokemons(results) \r\n//                    setLoading(false)\r\n//           }\r\n\r\n//           //------Llamar por ID los pokemons------//\r\n\r\n//            const getPokemonById = async (id) => {\r\n//             const baseURL = \"https://pokeapi.co/api/v2/\"\r\n//              const res = await fetch(`${baseURL}pokemon/${id}`)\r\n//               const data = await res.json()\r\n//                 return data \r\n//            }\r\n\r\n\r\n//         useEffect(()=>{\r\n//           getAllPokemons()\r\n//         }, [])\r\n\r\n//         useEffect(() =>{\r\n//           getGlobalPokemons()\r\n//         },[])\r\n\r\n//    return(\r\n//    <PokemonContext.Provider value={{\r\n//             valueSearch,\r\n//             onInputChange,\r\n//             onResetFrom,\r\n//             allPokemons,\r\n//             globalPokemons,\r\n//             getPokemonById\r\n//     }}>\r\n//     {children}\r\n//    </PokemonContext.Provider>\r\n//    );\r\n// };\r\n      "],"mappings":"AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,OAAO,QAAQ,kBAAkB;;AAG1C;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAKA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}